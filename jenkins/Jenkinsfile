    /* A file which configures our full Jenkins pipeline for DevOps Assessment 2 */
pipeline{

    agent any

    environment {

        FLASK_ENV = "testing"

        TESTING_SECRET_KEY = credentials('TESTING_SECRET_KEY')
        DEV_SECRET_KEY = credentials('DEV_SECRET_KEY')
        PRODUCTION_SECRET_KEY = credentials('PRODUCTION_SECRET_KEY')

        FILES_DIRECTORY = "src/file_output/"
        PNG_DIRECTORY = "src/png_output/"
        MIDI_DIRECTORY = "src/midi_output/"

        PRODUCTION_DB = "production_melodie_db"
        PRODUCTION_DB_USERNAME = credentials('DB_USERNAME')
        PRODUCTION_DB_USERPASS = credentials('DB_USERPASS')
        PRODUCTION_DATABASE_ADDRESS = credentials('DB_ADDRESS')

        DEVELOPMENT_DB = "dev_melodie_db"
        DEVELOPMENT_DB_USERNAME = credentials('DB_USERNAME')
        DEVELOPMENT_DB_USERPASS = credentials('DB_USERPASS')
        DEVELOPMENT_DATABASE_ADDRESS = credentials('DB_ADDRESS')

        TESTING_DB = "dev_melodie_db"
        TESTING_DB_USERNAME = credentials('DB_USERNAME')
        TESTING_DB_USERPASS = credentials('DB_USERPASS')
        TESTING_DATABASE_ADDRESS = credentials('DB_ADDRESS')

    }

    stages{

        stage('Configure our Test Environment'){
            steps{
                sh 'jenkins/scripts/configure_test_environment.sh'
            }
        }

        stage('Run Tests'){
            steps{

                withEnv(["FLASK_ENV=testing"]){

                    sh './scripts/run_test_service_1.sh'
                    sh '/scripts/run_test_service_2.sh'
                    sh '/scripts/run_test_service_3.sh'
                    sh '/scripts/run_test_service_4.sh'

                }
            }
        }

        stage('Install Ansible'){
            steps{
                bash 'jenkins/scripts/install_ansible.sh'
            }
        }

        stage('Run Ansible Playbook'){
            steps{
                sh 'jenkins/scripts/run_ansible_playbook.sh'
            }
        }

        stage('Build Docker Images'){

            steps{
                withEnv(["FLASK_ENV=production"]){
                    sh 'jenkins/scripts/build_and_push_docker_images.sh'
                }
            }
        }

        stage('Deploy Swarm Stack'){

            steps{
                sh 'jenkins/scripts/deploy_production_environment.sh'
                }
        }
    }

    post {

        always {
            echo 'One way or another, I have finished'

            chuckNorris()  // Chuck Norris. All Day, Every Day.
        }

        success {
            echo 'This build was a success.'
        }

        unstable {
            echo 'This build is unstable.'
        }

        failure {
            echo 'This build failed.'
        }
    }
}